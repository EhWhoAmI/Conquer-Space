/*
 * Conquer Space - Conquer Space!
 * Copyright (C) 2019 EhWhoAmI
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
package ConquerSpace.client.gui.game.engineering;

import ConquerSpace.common.game.organizations.civilization.Civilization;
import ConquerSpace.common.game.ships.launch.LaunchSystem;
import ConquerSpace.common.game.ships.launch.LaunchVehicle;
import javax.swing.DefaultListModel;

/**
 *
 * @author EhWhoAmI
 */
public class LaunchSystemDesigner extends javax.swing.JPanel {

    private Civilization c;

    private LaunchVehicleListModel launchVehicleListModel;

    /**
     * Creates new form LaunchSystemDesignerSheet
     */
    public LaunchSystemDesigner(Civilization c) {
        this.c = c;
        launchVehicleListModel = new LaunchVehicleListModel();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jToolBar1 = new javax.swing.JToolBar();
        newLaunchSystemButton = new javax.swing.JButton();
        saveLaunchSystemButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        launchTypesValue = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        randomNameButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        payloadmassSpinner = new javax.swing.JSpinner();
        payloadUnitLabel = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        reusabilityCheckbox = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        launchVehicleList = new javax.swing.JList<>();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        setLayout(new java.awt.GridBagLayout());

        jToolBar1.setBorder(null);
        jToolBar1.setRollover(true);

        newLaunchSystemButton.setText("New Launch System");
        newLaunchSystemButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        newLaunchSystemButton.setFocusable(false);
        newLaunchSystemButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newLaunchSystemButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newLaunchSystemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newLaunchSystemButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(newLaunchSystemButton);

        saveLaunchSystemButton.setText("Save Launch System");
        saveLaunchSystemButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        saveLaunchSystemButton.setFocusable(false);
        saveLaunchSystemButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveLaunchSystemButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveLaunchSystemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveLaunchSystemButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(saveLaunchSystemButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jToolBar1, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        launchTypesValue.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                launchTypesValueComponentShown(evt);
            }
        });
        launchTypesValue.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                launchTypesValuePropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(launchTypesValue, gridBagConstraints);

        jLabel7.setText("Launch System Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel7, gridBagConstraints);

        jLabel8.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel8, gridBagConstraints);

        nameField.setColumns(16);
        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(nameField, gridBagConstraints);

        randomNameButton.setText("Choose Random Name");
        randomNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomNameButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(randomNameButton, gridBagConstraints);

        jLabel9.setText("Maximum Payload");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel9, gridBagConstraints);

        payloadmassSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(payloadmassSpinner, gridBagConstraints);

        payloadUnitLabel.setText("kg");
        payloadUnitLabel.setToolTipText("Kilograms");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(payloadUnitLabel, gridBagConstraints);

        jLabel11.setText("Estimated cost per launch:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel11, gridBagConstraints);

        reusabilityCheckbox.setText("Reuseable?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(reusabilityCheckbox, gridBagConstraints);

        jLabel12.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);

        launchVehicleList.setModel(launchVehicleListModel);
        launchVehicleList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane3.setViewportView(launchVehicleList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane3, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        updateComponent();
    }//GEN-LAST:event_formMouseEntered

    private void launchTypesValueComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_launchTypesValueComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_launchTypesValueComponentShown

    private void launchTypesValuePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_launchTypesValuePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_launchTypesValuePropertyChange

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void randomNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomNameButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_randomNameButtonActionPerformed

    private void newLaunchSystemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newLaunchSystemButtonActionPerformed
        //Clear everything
    }//GEN-LAST:event_newLaunchSystemButtonActionPerformed

    private void saveLaunchSystemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveLaunchSystemButtonActionPerformed
        //Do the things
        if (!nameField.getText().isEmpty()) {
            LaunchVehicle vehicle = new LaunchVehicle();
            vehicle.setName(nameField.getText());
            vehicle.setSystemType((LaunchSystem) launchTypesValue.getSelectedItem());
            vehicle.setMaximumMass((Integer) payloadmassSpinner.getValue());
            vehicle.setReusability(reusabilityCheckbox.isSelected());
            c.launchVehicles.add(vehicle);
            launchVehicleListModel.fireEvent();
        }
    }//GEN-LAST:event_saveLaunchSystemButtonActionPerformed

    private void updateComponent() {
        launchTypesValue.removeAllItems();
        for (LaunchSystem t : c.launchSystems) {
            launchTypesValue.addItem(t);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JComboBox<LaunchSystem> launchTypesValue;
    private javax.swing.JList<LaunchVehicle> launchVehicleList;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton newLaunchSystemButton;
    private javax.swing.JLabel payloadUnitLabel;
    private javax.swing.JSpinner payloadmassSpinner;
    private javax.swing.JButton randomNameButton;
    private javax.swing.JCheckBox reusabilityCheckbox;
    private javax.swing.JButton saveLaunchSystemButton;
    // End of variables declaration//GEN-END:variables

    private class LaunchVehicleListModel extends DefaultListModel<LaunchVehicle> {

        @Override
        public int getSize() {
            return c.launchVehicles.size();
        }

        @Override
        public LaunchVehicle getElementAt(int index) {
            return c.launchVehicles.get(index);
        }

        public void fireEvent() {
            fireIntervalAdded(this, c.launchVehicles.size(), c.launchVehicles.size());
        }
    }
}
